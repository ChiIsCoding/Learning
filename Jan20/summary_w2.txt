Jan14 - Jan20 总结

本周阅读了Clean Code（CC）的11-17章。

11章System对我来说是最抽象的一个章节。阅读时就感觉读的很吃力，因为里面涉及很多我不知道的java的framework的知识。虽然当时勉强读完，现在写总结时却发现只记得DI和separate main两点。CC的12章列举了几条基本的设计准则。算是抽象的指导思想。13章讲了一些多线程的基本概念和注意事项，记得一些重点包括：分离多线程逻辑；了解多线程安全的数据结构，了解共享资源的使用模式，控制共享资源的数量和被使用的地方。我准备重新读一下这三章来加深理解。

14-16章是通过三个例子来演示如何refactoring。作者在每个例子中穿插引用一些指导思想，算是之前几章的具体应用。读这几章最大的感受是觉得写代码真的要精益求精。作者能注意到很多原来代码中不合理的地方，有的不合理处很小，有的隐藏在多个function或多个文件中。在refactoring过程中作者也展示了TDD的具体使用。这些都显示了通过不断思考和实践，有经验的程序员能够把好的编程方法融入习惯中，从而写出更整洁易懂的代码。反问自己平时的工作中，是否对修改的每行代码每个文件仔细思考？是否遵循了很多程序开发的最佳原则？投入多少就收获多少，我应该在平时工作里践行从书中学到的方法和原则。

17章是总结了全书不同地方提到过的经验。这一张可以作为全书的总结，但是如果没有读14-16章和在平时不断思考而是仅仅读这一章的话，最多只能了解些皮毛，永远没法编写更好的程序。

本周到现在ThinkingInJava只读了半章，进度比计划的落后。下周要多抽些时间，争取赶上些进度。

两周了，粗略读完了第一本书籍。下一周准备一方面花时间重读一些章节，一边开始读下一本，HeadFirstDesignPatten（HFDP）。在读的时候也要开始写一些代码，并同时读一些已有的framework相互印证。
